#!/usr/bin/env bash
set -euo pipefail

usage() {
  cat <<'USAGE'
Usage: verify-artifact.sh --artifact <path> --key <pub-key> [--signature <sig-path>] [--bundle <bundle-path>]

Required arguments:
  --artifact   Path to the artifact whose integrity you want to check.
  --key        Path to the Cosign public key used for verification. You can also provide
               COSIGN_PUBLIC_KEY in the environment instead of this flag.

Optional arguments:
  --signature  Detached signature file emitted by cosign sign-blob. Defaults to <artifact>.sig.
  --bundle     Attestation bundle generated by cosign attest-blob. When provided the script
               will run cosign verify-blob with the bundle to validate the DSSE envelope.

Environment variables:
  COSIGN_PUBLIC_KEY  Alternative to --key for setting the verification key path.

The helper runs cosign verify-blob to ensure the signature (and optional attestation bundle)
match the supplied artifact. This mirrors the checks executed in CI release signing.
USAGE
}

ARTIFACT=""
KEY_FILE="${COSIGN_PUBLIC_KEY:-}"
SIGNATURE=""
BUNDLE=""

while [[ $# -gt 0 ]]; do
  case "$1" in
    --artifact)
      ARTIFACT="$2"
      shift 2
      ;;
    --key)
      KEY_FILE="$2"
      shift 2
      ;;
    --signature)
      SIGNATURE="$2"
      shift 2
      ;;
    --bundle)
      BUNDLE="$2"
      shift 2
      ;;
    -h|--help)
      usage
      exit 0
      ;;
    *)
      echo "Unknown argument: $1" >&2
      usage >&2
      exit 1
      ;;
  esac
done

if [[ -z "$ARTIFACT" ]]; then
  echo "--artifact is required" >&2
  usage >&2
  exit 1
fi

if [[ -z "$KEY_FILE" ]]; then
  echo "--key or COSIGN_PUBLIC_KEY is required" >&2
  usage >&2
  exit 1
fi

if [[ ! -f "$ARTIFACT" ]]; then
  echo "Artifact '$ARTIFACT' not found" >&2
  exit 1
fi

if [[ ! -f "$KEY_FILE" ]]; then
  echo "Key '$KEY_FILE' not found" >&2
  exit 1
fi

SIGNATURE="${SIGNATURE:-${ARTIFACT}.sig}"

cosign verify-blob \
  --key "$KEY_FILE" \
  --signature "$SIGNATURE" \
  "$ARTIFACT"

echo "Verified detached signature for $ARTIFACT" >&2

if [[ -n "$BUNDLE" ]]; then
  if [[ ! -f "$BUNDLE" ]]; then
    echo "Bundle '$BUNDLE' not found" >&2
    exit 1
  fi
  cosign verify-blob \
    --key "$KEY_FILE" \
    --bundle "$BUNDLE" \
    "$ARTIFACT"
  echo "Verified attestation bundle for $ARTIFACT" >&2
fi
