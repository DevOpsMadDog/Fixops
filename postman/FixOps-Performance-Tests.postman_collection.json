{
	"info": {
		"name": "FixOps Load & Performance Tests",
		"description": "Performance testing for bank-grade SLA requirements (299Î¼s hot path target)"
	},
	"item": [
		{
			"name": "Load Test - Decision API",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Performance testing for bank SLA",
							"pm.test('Response time under bank SLA (2s)', function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							"",
							"pm.test('Hot path latency target (299Î¼s)', function () {",
							"    const data = pm.response.json();",
							"    if (data.processing_time_us) {",
							"        const latency_us = parseFloat(data.processing_time_us);",
							"        console.log('âš¡ Processing latency:', latency_us + 'Î¼s');",
							"        pm.expect(latency_us).to.be.below(1000); // Reasonable threshold for testing",
							"    }",
							"});",
							"",
							"// Log performance metrics",
							"console.log('ðŸ“Š Response time:', pm.response.responseTime + 'ms');",
							"const data = pm.response.json();",
							"if (data.processing_time_us) {",
							"    console.log('âš¡ Decision latency:', data.processing_time_us + 'Î¼s');",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{"key": "Content-Type", "value": "application/json"}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"service_name\": \"performance-test-{{$randomAlphaNumeric}}\",\n  \"environment\": \"{{ENVIRONMENT}}\",\n  \"business_context\": {\n    \"business_criticality\": \"medium\"\n  },\n  \"security_findings\": []\n}"
				},
				"url": "{{BASE_URL}}/api/v1/decisions/make-decision"
			}
		},
		{
			"name": "Concurrent Decision Test",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Set unique service name for concurrent testing",
							"pm.environment.set('CONCURRENT_SERVICE', 'concurrent-test-' + Date.now());"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Concurrent request handled', function () {",
							"    pm.response.to.have.status(200);",
							"    const data = pm.response.json();",
							"    pm.expect(data.decision).to.be.oneOf(['ALLOW', 'BLOCK', 'DEFER']);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{"key": "Content-Type", "value": "application/json"}
				],
				"body": {
					"mode": "raw", 
					"raw": "{\n  \"service_name\": \"{{CONCURRENT_SERVICE}}\",\n  \"environment\": \"production\",\n  \"business_context\": {\n    \"business_criticality\": \"high\"\n  }\n}"
				},
				"url": "{{BASE_URL}}/api/v1/decisions/make-decision"
			}
		}
	]
}
