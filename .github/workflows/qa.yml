name: qa

on:
  push:
    branches:
      - main
      - work
  pull_request:

permissions:
  contents: read

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          if [ -f requirements.dev.txt ]; then pip install -r requirements.dev.txt; fi
          if [ -f apps/api/requirements-optional.txt ]; then pip install -r apps/api/requirements-optional.txt; fi
      - name: Formatting checks
        run: |
          black --check .
          isort --check-only .
      - name: Lint
        run: flake8
      - name: Type check
        run: mypy .
      - name: Tests with coverage
        env:
          PYTHONPATH: .
        run: |
          mkdir -p reports/coverage
          pytest \
            services/provenance/tests/test_attestation.py \
            services/graph/tests/test_graph.py \
            services/repro/tests/test_verifier.py \
            tests/test_sbom_quality.py \
            tests/test_risk_scoring.py \
            tests/test_evidence_bundle.py \
            tests/test_graph_worker.py \
            tests/test_telemetry_runtime.py \
            -q --override-ini testpaths='' \
            --override-ini "addopts=--cov=services.provenance --cov=services.graph --cov=services.repro --cov=lib4sbom --cov=risk --cov=evidence --cov=telemetry --cov=scripts.graph_worker --cov-report=term-missing --cov-report=xml:reports/coverage/coverage.xml --cov-fail-under=70"
      - name: Coverage summary
        run: |
          python - <<'PY'
          from pathlib import Path
          import xml.etree.ElementTree as ET

          xml_path = Path("reports/coverage/coverage.xml")
          root = ET.parse(xml_path).getroot()
          rate = float(root.attrib.get("line-rate", 0.0))
          summary = f"Total coverage: {rate * 100:.2f}%\n"
          Path("reports/coverage/summary.txt").write_text(summary, encoding="utf-8")
          print(summary.strip())
          PY
      - name: Upload coverage artefacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: |
            reports/coverage/coverage.xml
            reports/coverage/summary.txt
          if-no-files-found: error
