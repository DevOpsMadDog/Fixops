digraph callgraph {
  "frontend-akido-public/node_modules/flatted/python/flatted.py:_array_keys" -> "append";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:_object_keys" -> "append";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:_is_array" -> "isinstance";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:_is_object" -> "isinstance";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:_is_string" -> "isinstance";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:_index" -> "append";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:_index" -> "len";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:_index" -> "str";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:_loop" -> "_ref";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:_loop" -> "int";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:_loop" -> "isinstance";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:_ref" -> "_array_keys";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:_ref" -> "_is_array";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:_ref" -> "_is_object";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:_ref" -> "_loop";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:_ref" -> "_object_keys";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:_ref" -> "append";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:_relate" -> "_index";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:_relate" -> "_is_array";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:_relate" -> "_is_object";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:_relate" -> "_is_string";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:_relate" -> "index";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:_transform" -> "_is_array";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:_transform" -> "_is_object";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:_transform" -> "_relate";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:_transform" -> "append";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:_wrap" -> "_String";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:_wrap" -> "_is_array";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:_wrap" -> "_is_object";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:_wrap" -> "_is_string";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:_wrap" -> "_wrap";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:parse" -> "_array_keys";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:parse" -> "_is_array";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:parse" -> "_is_object";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:parse" -> "_loop";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:parse" -> "_object_keys";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:parse" -> "_wrap";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:parse" -> "append";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:parse" -> "isinstance";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:parse" -> "loads";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:stringify" -> "_Known";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:stringify" -> "_index";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:stringify" -> "_transform";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:stringify" -> "append";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:stringify" -> "dumps";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:stringify" -> "int";
  "frontend-akido-public/node_modules/flatted/python/flatted.py:stringify" -> "len";
}
