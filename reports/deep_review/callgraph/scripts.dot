digraph callgraph {
  "scripts/generate_file_usage_inventory.py:git_tracked_files" -> "run";
  "scripts/generate_file_usage_inventory.py:git_tracked_files" -> "splitlines";
  "scripts/generate_file_usage_inventory.py:git_tracked_files" -> "strip";
  "scripts/generate_file_usage_inventory.py:count_lines" -> "open";
  "scripts/generate_file_usage_inventory.py:count_lines" -> "sum";
  "scripts/generate_file_usage_inventory.py:load_overrides" -> "RuntimeError";
  "scripts/generate_file_usage_inventory.py:load_overrides" -> "exists";
  "scripts/generate_file_usage_inventory.py:load_overrides" -> "get";
  "scripts/generate_file_usage_inventory.py:load_overrides" -> "items";
  "scripts/generate_file_usage_inventory.py:load_overrides" -> "loads";
  "scripts/generate_file_usage_inventory.py:load_overrides" -> "read_text";
  "scripts/generate_file_usage_inventory.py:load_overrides" -> "str";
  "scripts/generate_file_usage_inventory.py:classify" -> "InventoryEntry";
  "scripts/generate_file_usage_inventory.py:classify" -> "count_lines";
  "scripts/generate_file_usage_inventory.py:classify" -> "get";
  "scripts/generate_file_usage_inventory.py:classify" -> "matches";
  "scripts/generate_file_usage_inventory.py:classify" -> "next";
  "scripts/generate_file_usage_inventory.py:write_summary" -> "mkdir";
  "scripts/generate_file_usage_inventory.py:write_summary" -> "open";
  "scripts/generate_file_usage_inventory.py:write_summary" -> "writer";
  "scripts/generate_file_usage_inventory.py:write_summary" -> "writerow";
  "scripts/generate_file_usage_inventory.py:write_totals" -> "dumps";
  "scripts/generate_file_usage_inventory.py:write_totals" -> "setdefault";
  "scripts/generate_file_usage_inventory.py:write_totals" -> "write_text";
  "scripts/generate_file_usage_inventory.py:write_report" -> "get";
  "scripts/generate_file_usage_inventory.py:write_report" -> "join";
  "scripts/generate_file_usage_inventory.py:write_report" -> "loads";
  "scripts/generate_file_usage_inventory.py:write_report" -> "read_text";
  "scripts/generate_file_usage_inventory.py:write_report" -> "write_text";
  "scripts/generate_file_usage_inventory.py:main" -> "classify";
  "scripts/generate_file_usage_inventory.py:main" -> "git_tracked_files";
  "scripts/generate_file_usage_inventory.py:main" -> "load_overrides";
  "scripts/generate_file_usage_inventory.py:main" -> "write_report";
  "scripts/generate_file_usage_inventory.py:main" -> "write_summary";
  "scripts/generate_file_usage_inventory.py:main" -> "write_totals";
  "scripts/generate_file_usage_inventory.py:Rule.matches" -> "any";
  "scripts/generate_file_usage_inventory.py:Rule.matches" -> "fnmatch";
  "scripts/generate_analysis.py:iter_python_files" -> "exists";
  "scripts/generate_analysis.py:iter_python_files" -> "rglob";
  "scripts/generate_analysis.py:load_module_map" -> "as_posix";
  "scripts/generate_analysis.py:load_module_map" -> "relative_to";
  "scripts/generate_analysis.py:load_module_map" -> "replace";
  "scripts/generate_analysis.py:infer_role" -> "startswith";
  "scripts/generate_analysis.py:extract_symbols" -> "append";
  "scripts/generate_analysis.py:extract_symbols" -> "isinstance";
  "scripts/generate_analysis.py:collect_external_imports" -> "add";
  "scripts/generate_analysis.py:collect_external_imports" -> "all";
  "scripts/generate_analysis.py:collect_external_imports" -> "isinstance";
  "scripts/generate_analysis.py:collect_external_imports" -> "set";
  "scripts/generate_analysis.py:collect_external_imports" -> "sorted";
  "scripts/generate_analysis.py:collect_external_imports" -> "split";
  "scripts/generate_analysis.py:collect_external_imports" -> "startswith";
  "scripts/generate_analysis.py:collect_external_imports" -> "walk";
  "scripts/generate_analysis.py:detect_risks" -> "add";
  "scripts/generate_analysis.py:detect_risks" -> "isinstance";
  "scripts/generate_analysis.py:detect_risks" -> "set";
  "scripts/generate_analysis.py:detect_risks" -> "sorted";
  "scripts/generate_analysis.py:detect_risks" -> "walk";
  "scripts/generate_analysis.py:detect_flags" -> "add";
  "scripts/generate_analysis.py:detect_flags" -> "set";
  "scripts/generate_analysis.py:detect_flags" -> "sorted";
  "scripts/generate_analysis.py:summarise_files" -> "ModuleSummary";
  "scripts/generate_analysis.py:summarise_files" -> "append";
  "scripts/generate_analysis.py:summarise_files" -> "as_posix";
  "scripts/generate_analysis.py:summarise_files" -> "collect_external_imports";
  "scripts/generate_analysis.py:summarise_files" -> "detect_flags";
  "scripts/generate_analysis.py:summarise_files" -> "detect_risks";
  "scripts/generate_analysis.py:summarise_files" -> "extract_symbols";
  "scripts/generate_analysis.py:summarise_files" -> "infer_role";
  "scripts/generate_analysis.py:summarise_files" -> "iter_python_files";
  "scripts/generate_analysis.py:summarise_files" -> "join";
  "scripts/generate_analysis.py:summarise_files" -> "list";
  "scripts/generate_analysis.py:summarise_files" -> "load_module_map";
  "scripts/generate_analysis.py:summarise_files" -> "parse";
  "scripts/generate_analysis.py:summarise_files" -> "read_text";
  "scripts/generate_analysis.py:summarise_files" -> "relative_to";
  "scripts/generate_analysis.py:summarise_files" -> "sort";
  "scripts/generate_analysis.py:summarise_files" -> "str";
  "scripts/generate_analysis.py:write_file_summaries" -> "mkdir";
  "scripts/generate_analysis.py:write_file_summaries" -> "open";
  "scripts/generate_analysis.py:write_file_summaries" -> "writer";
  "scripts/generate_analysis.py:write_file_summaries" -> "writerow";
  "scripts/generate_analysis.py:write_data_control_flows" -> "open";
  "scripts/generate_analysis.py:write_data_control_flows" -> "write";
  "scripts/generate_analysis.py:write_traceability_matrix" -> "append";
  "scripts/generate_analysis.py:write_traceability_matrix" -> "items";
  "scripts/generate_analysis.py:write_traceability_matrix" -> "open";
  "scripts/generate_analysis.py:write_traceability_matrix" -> "writer";
  "scripts/generate_analysis.py:write_traceability_matrix" -> "writerow";
  "scripts/generate_analysis.py:main" -> "list";
  "scripts/generate_analysis.py:main" -> "summarise_files";
  "scripts/generate_analysis.py:main" -> "write_data_control_flows";
  "scripts/generate_analysis.py:main" -> "write_file_summaries";
  "scripts/generate_analysis.py:main" -> "write_traceability_matrix";
  "scripts/run_real_cve_playbook.py:load_context" -> "load";
  "scripts/run_real_cve_playbook.py:load_context" -> "open";
  "scripts/run_real_cve_playbook.py:build_table" -> "Table";
  "scripts/run_real_cve_playbook.py:build_table" -> "add_column";
  "scripts/run_real_cve_playbook.py:build_table" -> "add_row";
  "scripts/run_real_cve_playbook.py:build_table" -> "get";
  "scripts/run_real_cve_playbook.py:build_table" -> "join";
  "scripts/run_real_cve_playbook.py:print_compliance_results" -> "ComplianceEngine";
  "scripts/run_real_cve_playbook.py:print_compliance_results" -> "_evaluate_framework";
  "scripts/run_real_cve_playbook.py:print_compliance_results" -> "get";
  "scripts/run_real_cve_playbook.py:print_compliance_results" -> "print";
  "scripts/run_real_cve_playbook.py:print_compliance_results" -> "upper";
  "scripts/run_real_cve_playbook.py:main" -> "ArgumentParser";
  "scripts/run_real_cve_playbook.py:main" -> "Console";
  "scripts/run_real_cve_playbook.py:main" -> "ContextualRiskScorer";
  "scripts/run_real_cve_playbook.py:main" -> "add_argument";
  "scripts/run_real_cve_playbook.py:main" -> "apply";
  "scripts/run_real_cve_playbook.py:main" -> "build_table";
  "scripts/run_real_cve_playbook.py:main" -> "get";
  "scripts/run_real_cve_playbook.py:main" -> "load_context";
  "scripts/run_real_cve_playbook.py:main" -> "parse_args";
  "scripts/run_real_cve_playbook.py:main" -> "print";
  "scripts/run_real_cve_playbook.py:main" -> "print_compliance_results";
  "scripts/generate_index.py:iter_python_files" -> "any";
  "scripts/generate_index.py:iter_python_files" -> "as_posix";
  "scripts/generate_index.py:iter_python_files" -> "exists";
  "scripts/generate_index.py:iter_python_files" -> "relative_to";
  "scripts/generate_index.py:iter_python_files" -> "rglob";
  "scripts/generate_index.py:iter_python_files" -> "startswith";
  "scripts/generate_index.py:count_sloc" -> "read_text";
  "scripts/generate_index.py:count_sloc" -> "splitlines";
  "scripts/generate_index.py:count_sloc" -> "startswith";
  "scripts/generate_index.py:count_sloc" -> "strip";
  "scripts/generate_index.py:detect_role" -> "get";
  "scripts/generate_index.py:build_import_graph" -> "add";
  "scripts/generate_index.py:build_import_graph" -> "as_posix";
  "scripts/generate_index.py:build_import_graph" -> "defaultdict";
  "scripts/generate_index.py:build_import_graph" -> "isinstance";
  "scripts/generate_index.py:build_import_graph" -> "parse";
  "scripts/generate_index.py:build_import_graph" -> "read_text";
  "scripts/generate_index.py:build_import_graph" -> "relative_to";
  "scripts/generate_index.py:build_import_graph" -> "replace";
  "scripts/generate_index.py:build_import_graph" -> "set";
  "scripts/generate_index.py:build_import_graph" -> "sorted";
  "scripts/generate_index.py:build_import_graph" -> "str";
  "scripts/generate_index.py:build_import_graph" -> "walk";
  "scripts/generate_index.py:write_tree" -> "any";
  "scripts/generate_index.py:write_tree" -> "append";
  "scripts/generate_index.py:write_tree" -> "as_posix";
  "scripts/generate_index.py:write_tree" -> "enumerate";
  "scripts/generate_index.py:write_tree" -> "is_dir";
  "scripts/generate_index.py:write_tree" -> "iterdir";
  "scripts/generate_index.py:write_tree" -> "join";
  "scripts/generate_index.py:write_tree" -> "len";
  "scripts/generate_index.py:write_tree" -> "relative_to";
  "scripts/generate_index.py:write_tree" -> "rstrip";
  "scripts/generate_index.py:write_tree" -> "should_skip";
  "scripts/generate_index.py:write_tree" -> "sorted";
  "scripts/generate_index.py:write_tree" -> "startswith";
  "scripts/generate_index.py:write_tree" -> "walk";
  "scripts/generate_index.py:write_tree" -> "write_text";
  "scripts/generate_index.py:main" -> "append";
  "scripts/generate_index.py:main" -> "as_posix";
  "scripts/generate_index.py:main" -> "build_import_graph";
  "scripts/generate_index.py:main" -> "count_sloc";
  "scripts/generate_index.py:main" -> "detect_role";
  "scripts/generate_index.py:main" -> "dump";
  "scripts/generate_index.py:main" -> "iter_python_files";
  "scripts/generate_index.py:main" -> "list";
  "scripts/generate_index.py:main" -> "mkdir";
  "scripts/generate_index.py:main" -> "open";
  "scripts/generate_index.py:main" -> "relative_to";
  "scripts/generate_index.py:main" -> "sort";
  "scripts/generate_index.py:main" -> "write_tree";
  "scripts/generate_index.py:main" -> "writer";
  "scripts/generate_index.py:main" -> "writerow";
  "scripts/generate_index.py:main" -> "writerows";
  "scripts/deep_review.py:iter_python_files" -> "rglob";
  "scripts/deep_review.py:cyclomatic_complexity" -> "isinstance";
  "scripts/deep_review.py:cyclomatic_complexity" -> "walk";
  "scripts/deep_review.py:collect_calls" -> "append";
  "scripts/deep_review.py:collect_calls" -> "isinstance";
  "scripts/deep_review.py:collect_calls" -> "set";
  "scripts/deep_review.py:collect_calls" -> "sorted";
  "scripts/deep_review.py:collect_calls" -> "walk";
  "scripts/deep_review.py:module_report" -> "ClassReport";
  "scripts/deep_review.py:module_report" -> "FunctionReport";
  "scripts/deep_review.py:module_report" -> "ModuleReport";
  "scripts/deep_review.py:module_report" -> "append";
  "scripts/deep_review.py:module_report" -> "collect_calls";
  "scripts/deep_review.py:module_report" -> "cyclomatic_complexity";
  "scripts/deep_review.py:module_report" -> "get_docstring";
  "scripts/deep_review.py:module_report" -> "getattr";
  "scripts/deep_review.py:module_report" -> "isinstance";
  "scripts/deep_review.py:module_report" -> "parse";
  "scripts/deep_review.py:module_report" -> "read_text";
  "scripts/deep_review.py:module_report" -> "set";
  "scripts/deep_review.py:module_report" -> "sorted";
  "scripts/deep_review.py:module_report" -> "str";
  "scripts/deep_review.py:build_import_graph" -> "add";
  "scripts/deep_review.py:build_import_graph" -> "as_posix";
  "scripts/deep_review.py:build_import_graph" -> "defaultdict";
  "scripts/deep_review.py:build_import_graph" -> "relative_to";
  "scripts/deep_review.py:build_import_graph" -> "replace";
  "scripts/deep_review.py:build_import_graph" -> "rsplit";
  "scripts/deep_review.py:write_import_graph" -> "append";
  "scripts/deep_review.py:write_import_graph" -> "items";
  "scripts/deep_review.py:write_import_graph" -> "join";
  "scripts/deep_review.py:write_import_graph" -> "mkdir";
  "scripts/deep_review.py:write_import_graph" -> "set";
  "scripts/deep_review.py:write_import_graph" -> "sorted";
  "scripts/deep_review.py:write_import_graph" -> "write_text";
  "scripts/deep_review.py:build_callgraph" -> "append";
  "scripts/deep_review.py:build_callgraph" -> "as_posix";
  "scripts/deep_review.py:build_callgraph" -> "defaultdict";
  "scripts/deep_review.py:build_callgraph" -> "relative_to";
  "scripts/deep_review.py:write_callgraph" -> "append";
  "scripts/deep_review.py:write_callgraph" -> "items";
  "scripts/deep_review.py:write_callgraph" -> "join";
  "scripts/deep_review.py:write_callgraph" -> "mkdir";
  "scripts/deep_review.py:write_callgraph" -> "write_text";
  "scripts/deep_review.py:detect_duplicates" -> "append";
  "scripts/deep_review.py:detect_duplicates" -> "as_posix";
  "scripts/deep_review.py:detect_duplicates" -> "defaultdict";
  "scripts/deep_review.py:detect_duplicates" -> "dump";
  "scripts/deep_review.py:detect_duplicates" -> "enumerate";
  "scripts/deep_review.py:detect_duplicates" -> "items";
  "scripts/deep_review.py:detect_duplicates" -> "len";
  "scripts/deep_review.py:detect_duplicates" -> "parse";
  "scripts/deep_review.py:detect_duplicates" -> "read_text";
  "scripts/deep_review.py:detect_duplicates" -> "relative_to";
  "scripts/deep_review.py:stage_runner_overview" -> "append";
  "scripts/deep_review.py:stage_runner_overview" -> "dict";
  "scripts/deep_review.py:stage_runner_overview" -> "get";
  "scripts/deep_review.py:stage_runner_overview" -> "getattr";
  "scripts/deep_review.py:stage_runner_overview" -> "items";
  "scripts/deep_review.py:stage_runner_overview" -> "len";
  "scripts/deep_review.py:detect_gaps" -> "read_text";
  "scripts/deep_review.py:detect_gaps" -> "set";
  "scripts/deep_review.py:detect_gaps" -> "sorted";
  "scripts/deep_review.py:detect_gaps" -> "values";
  "scripts/deep_review.py:write_json" -> "dumps";
  "scripts/deep_review.py:write_json" -> "mkdir";
  "scripts/deep_review.py:write_json" -> "write_text";
  "scripts/deep_review.py:main" -> "ArgumentParser";
  "scripts/deep_review.py:main" -> "add_argument";
  "scripts/deep_review.py:main" -> "append";
  "scripts/deep_review.py:main" -> "as_posix";
  "scripts/deep_review.py:main" -> "build_callgraph";
  "scripts/deep_review.py:main" -> "build_import_graph";
  "scripts/deep_review.py:main" -> "detect_duplicates";
  "scripts/deep_review.py:main" -> "detect_gaps";
  "scripts/deep_review.py:main" -> "isoformat";
  "scripts/deep_review.py:main" -> "iter_python_files";
  "scripts/deep_review.py:main" -> "mkdir";
  "scripts/deep_review.py:main" -> "module_report";
  "scripts/deep_review.py:main" -> "parse_args";
  "scripts/deep_review.py:main" -> "print";
  "scripts/deep_review.py:main" -> "relative_to";
  "scripts/deep_review.py:main" -> "serialise_module";
  "scripts/deep_review.py:main" -> "stage_runner_overview";
  "scripts/deep_review.py:main" -> "utcnow";
  "scripts/deep_review.py:main" -> "write_callgraph";
  "scripts/deep_review.py:main" -> "write_import_graph";
  "scripts/deep_review.py:main" -> "write_json";
}
