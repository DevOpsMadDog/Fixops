apiVersion: apps/v1
kind: Deployment
metadata:
  name: fixops-backend
  namespace: fixops
  labels:
    app.kubernetes.io/name: fixops
    app.kubernetes.io/component: backend
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: fixops
      app.kubernetes.io/component: backend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: fixops
        app.kubernetes.io/component: backend
        app.kubernetes.io/version: "1.0.0"
    spec:
      serviceAccountName: fixops-backend
      containers:
      - name: fixops-backend
        image: fixops/backend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8001
          name: http
          protocol: TCP
        envFrom:
        - configMapRef:
            name: fixops-config
        - secretRef:
            name: fixops-secrets
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8001
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: evidence-storage
          mountPath: /app/data/evidence
        - name: uploads-storage
          mountPath: /app/data/uploads
      volumes:
      - name: evidence-storage
        persistentVolumeClaim:
          claimName: fixops-evidence-lake
      - name: uploads-storage
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: fixops-backend-service
  namespace: fixops
  labels:
    app.kubernetes.io/name: fixops
    app.kubernetes.io/component: backend
spec:
  selector:
    app.kubernetes.io/name: fixops
    app.kubernetes.io/component: backend
  ports:
  - port: 8001
    targetPort: 8001
    protocol: TCP
    name: http
  type: ClusterIP
