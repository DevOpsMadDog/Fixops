ReviewReport_v1:
  category: security
  global_findings:
    - severity: high
      control: API_hardening
      description: "`backend.create_app` registers CORS with `allow_origins=['*']` while enabling credentials and token auth, exposing CSRF avenues." 
      evidence:
        - "F:apps/api/app.py†L35-L58"
      recommendation: "Constrain origins, disable credentialed CORS unless front-end origin is pinned, and front the API with an authenticated gateway."
    - severity: high
      control: secret_management
      description: "Demo runner seeds API tokens and encryption key literals which may bleed into production shells." 
      evidence:
        - "F:core/demo_runner.py†L16-L29"
      recommendation: "Isolate demo secrets to dedicated `.env.demo`, assert on unexpected mode usage, and require external secret stores for real deployments."
    - severity: high
      control: authz
      description: "Enterprise Dockerfile exports `FIXOPS_AUTH_DISABLED=true` and Kubernetes ships placeholder secrets, meaning a straight deploy would run without auth." 
      evidence:
        - "F:enterprise/Dockerfile†L56-L71"
        - "F:enterprise/kubernetes/secret.yaml†L7-L18"
      recommendation: "Fail container startup when auth is disabled outside demos and replace static secret manifests with integrations to vault/SecretsManager."
    - severity: high
      control: application_auth
      description: "Decision-engine prototype (`new_backend`) exposes `/decisions` and `/feedback` without any authentication or rate limits." 
      evidence:
        - "F:new_apps/api/api.py†L41-L80"
      recommendation: "Add auth middleware (API keys/JWT), throttle unauthenticated access, or keep service internal-only."
    - severity: medium
      control: dependency_integrity
      description: "Requirements reference broad ranges and a GitHub URL, leaving room for supply-chain tampering and non-repeatable builds." 
      evidence:
        - "F:apps/api/requirements.txt†L1-L7"
      recommendation: "Adopt lockfiles with hashes, mirror dependencies, or pin to vetted artefacts before production rollout."
    - severity: medium
      control: IaC_hardening
      description: "Terraform backend stores state in a generic `bank-terraform-state` bucket while Kubernetes ingress exposes three public hosts with no WAF." 
      evidence:
        - "F:enterprise/terraform/main.tf†L17-L53"
        - "F:enterprise/kubernetes/ingress.yaml†L19-L56"
      recommendation: "Use dedicated, encrypted state buckets per environment and apply WAF / rate-limit annotations or private ingress for sensitive services."
