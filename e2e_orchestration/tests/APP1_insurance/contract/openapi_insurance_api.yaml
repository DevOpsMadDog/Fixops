openapi: 3.0.3
info:
  title: Insurance Platform API
  version: 1.0.0
  description: |
    Insurance quote, underwriting, and policy management API
    
    **Security**: All endpoints require JWT authentication
    **Compliance**: HIPAA, SOC2, ISO27001, PCI-DSS, GDPR
    
servers:
  - url: https://api.insurance.example.com/v1
    description: Production
  - url: https://staging-api.insurance.example.com/v1
    description: Staging

security:
  - bearerAuth: []

paths:
  /quotes:
    post:
      summary: Create insurance quote
      description: Generate quote based on customer information and coverage requirements
      operationId: createQuote
      tags:
        - Quotes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuoteRequest'
            examples:
              auto_insurance:
                summary: Auto insurance quote
                value:
                  customer_id: "cust_1234567890"
                  quote_type: "auto"
                  coverage_amount: 100000
                  deductible: 1000
                  vehicle:
                    year: 2020
                    make: "Toyota"
                    model: "Camry"
                    vin: "1HGBH41JXMN109186"
              health_insurance:
                summary: Health insurance quote
                value:
                  customer_id: "cust_0987654321"
                  quote_type: "health"
                  coverage_amount: 500000
                  deductible: 5000
                  medical_history:
                    pre_existing_conditions: ["diabetes"]
                    medications: ["metformin"]
      responses:
        '200':
          description: Quote created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteResponse'
              examples:
                success:
                  value:
                    quote_id: "quote_abc123def456"
                    customer_id: "cust_1234567890"
                    quote_type: "auto"
                    premium_monthly: 125.50
                    premium_annual: 1506.00
                    coverage_amount: 100000
                    deductible: 1000
                    valid_until: "2025-11-28T00:00:00Z"
                    status: "pending"
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                missing_customer_id:
                  value:
                    error: "validation_error"
                    message: "customer_id is required"
                    field: "customer_id"
        '401':
          description: Unauthorized - Invalid or missing JWT token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden - Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                rate_limit:
                  value:
                    error: "rate_limit_exceeded"
                    message: "Too many requests. Limit: 100 req/min"
                    retry_after: 60

  /quotes/{quote_id}:
    get:
      summary: Get quote details
      description: Retrieve quote by ID with authorization check
      operationId: getQuote
      tags:
        - Quotes
      parameters:
        - name: quote_id
          in: path
          required: true
          schema:
            type: string
            pattern: '^quote_[a-zA-Z0-9]{12}$'
          example: "quote_abc123def456"
      responses:
        '200':
          description: Quote details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteResponse'
        '404':
          description: Quote not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /policies:
    post:
      summary: Create insurance policy
      description: Convert approved quote to active policy
      operationId: createPolicy
      tags:
        - Policies
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyRequest'
      responses:
        '201':
          description: Policy created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /policies/{policy_id}:
    get:
      summary: Get policy details
      description: Retrieve policy by ID (IDOR vulnerability test)
      operationId: getPolicy
      tags:
        - Policies
      parameters:
        - name: policy_id
          in: path
          required: true
          schema:
            type: string
          example: "pol_xyz789abc123"
      responses:
        '200':
          description: Policy details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyResponse'
        '403':
          description: Forbidden - Cannot access other customer's policy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Policy not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /claims:
    post:
      summary: Submit insurance claim
      description: Submit claim for policy with document upload
      operationId: submitClaim
      tags:
        - Claims
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - policy_id
                - claim_type
                - claim_amount
                - description
              properties:
                policy_id:
                  type: string
                claim_type:
                  type: string
                  enum: [accident, theft, medical, property_damage]
                claim_amount:
                  type: number
                  format: double
                  minimum: 0
                description:
                  type: string
                  maxLength: 5000
                documents:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '201':
          description: Claim submitted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /customers/{customer_id}/medical-records:
    get:
      summary: Get customer medical records
      description: Retrieve medical records (PHI) with HIPAA audit logging
      operationId: getMedicalRecords
      tags:
        - Medical Records
      security:
        - bearerAuth: []
      parameters:
        - name: customer_id
          in: path
          required: true
          schema:
            type: string
          example: "cust_1234567890"
      responses:
        '200':
          description: Medical records
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalRecords'
        '403':
          description: Forbidden - Insufficient permissions to access PHI
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /billing/payments:
    post:
      summary: Process payment
      description: Process premium payment via Stripe
      operationId: processPayment
      tags:
        - Billing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
      responses:
        '200':
          description: Payment processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
        '402':
          description: Payment failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    QuoteRequest:
      type: object
      required:
        - customer_id
        - quote_type
        - coverage_amount
        - deductible
      properties:
        customer_id:
          type: string
          pattern: '^cust_[0-9]{10}$'
        quote_type:
          type: string
          enum: [auto, home, health, life]
        coverage_amount:
          type: number
          format: double
          minimum: 10000
          maximum: 10000000
        deductible:
          type: number
          format: double
          minimum: 0
        vehicle:
          $ref: '#/components/schemas/Vehicle'
        medical_history:
          $ref: '#/components/schemas/MedicalHistory'

    QuoteResponse:
      type: object
      properties:
        quote_id:
          type: string
        customer_id:
          type: string
        quote_type:
          type: string
        premium_monthly:
          type: number
          format: double
        premium_annual:
          type: number
          format: double
        coverage_amount:
          type: number
          format: double
        deductible:
          type: number
          format: double
        valid_until:
          type: string
          format: date-time
        status:
          type: string
          enum: [pending, approved, rejected, expired]

    PolicyRequest:
      type: object
      required:
        - quote_id
        - payment_method
      properties:
        quote_id:
          type: string
        payment_method:
          type: string
          enum: [credit_card, bank_transfer, check]
        billing_frequency:
          type: string
          enum: [monthly, quarterly, annual]

    PolicyResponse:
      type: object
      properties:
        policy_id:
          type: string
        quote_id:
          type: string
        customer_id:
          type: string
        policy_number:
          type: string
        effective_date:
          type: string
          format: date
        expiration_date:
          type: string
          format: date
        status:
          type: string
          enum: [active, cancelled, expired, suspended]
        premium_monthly:
          type: number
          format: double

    ClaimResponse:
      type: object
      properties:
        claim_id:
          type: string
        policy_id:
          type: string
        claim_type:
          type: string
        claim_amount:
          type: number
          format: double
        status:
          type: string
          enum: [submitted, under_review, approved, denied, paid]
        submitted_at:
          type: string
          format: date-time

    Vehicle:
      type: object
      properties:
        year:
          type: integer
          minimum: 1900
          maximum: 2025
        make:
          type: string
        model:
          type: string
        vin:
          type: string
          pattern: '^[A-HJ-NPR-Z0-9]{17}$'

    MedicalHistory:
      type: object
      properties:
        pre_existing_conditions:
          type: array
          items:
            type: string
        medications:
          type: array
          items:
            type: string
        allergies:
          type: array
          items:
            type: string

    MedicalRecords:
      type: object
      properties:
        customer_id:
          type: string
        records:
          type: array
          items:
            type: object
            properties:
              record_id:
                type: string
              date:
                type: string
                format: date
              diagnosis:
                type: string
              treatment:
                type: string
              provider:
                type: string

    PaymentRequest:
      type: object
      required:
        - policy_id
        - amount
        - payment_method
      properties:
        policy_id:
          type: string
        amount:
          type: number
          format: double
          minimum: 0
        payment_method:
          type: string
          enum: [stripe, paypal, bank_transfer]
        stripe_token:
          type: string

    PaymentResponse:
      type: object
      properties:
        payment_id:
          type: string
        policy_id:
          type: string
        amount:
          type: number
          format: double
        status:
          type: string
          enum: [succeeded, failed, pending]
        transaction_id:
          type: string

    Error:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
        message:
          type: string
        field:
          type: string
        retry_after:
          type: integer
